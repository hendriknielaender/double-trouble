---
import { SITE } from '~/config.mjs';
---

<script is:inline define:vars={{ defaultTheme: SITE.defaultTheme }}>
  function applyTheme(theme) {
    if (theme === 'light') {
      document.documentElement.classList.add('light');
    } else {
      document.documentElement.classList.remove('light');
    }
  }

  if ((defaultTheme && defaultTheme.endsWith(':only')) || (!localStorage.theme && defaultTheme !== 'system')) {
    applyTheme(defaultTheme.replace(':only', ''));
  } else if (
    localStorage.theme === 'dark' ||
    (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
  ) {
    applyTheme('dark');
  } else {
    applyTheme('light');
  }

  function adjustTweetsToTheme() {
    // toggle tweets that are still blockquotes (only shortly after pageload)
    const blockquotes = document.getElementsByTagName("blockquote");
    for (i = 0; i < blockquotes.length; ++i)
    {
       if (blockquotes[i].className != undefined && blockquotes[i].className=="twitter-tweet") {
         if (localStorage.theme == "dark") {
           blockquotes[i].dataset.theme = "dark"
         }
         else if (localStorage.theme == "light") {
           blockquotes[i].dataset.theme = "light"
         } else {
           console.warning("unknown theme: " + localStorage.theme)
         }
       }
    }

    // toggle also tweets that are already converted into iframes by the twitter javascript
    // useful when the theme is changed after pageload
    const frames = document.getElementsByTagName("iframe");
    for (i = 0; i < frames.length; ++i)
    {
       if (frames[i].id.indexOf("twitter-widget") >= 0) {
         console.log("adjusting tweet")
         if (localStorage.theme == "light") {
           frames[i].src = frames[i].src.replace("theme=light", "theme=dark")
         }
         else if (localStorage.theme == "dark") {
           frames[i].src = frames[i].src.replace("theme=dark", "theme=light")
           console.log(frames[i].src)
         } else {
           console.log("unknown theme: " + localStorage.theme)
         }
       }
    }
  }

  function attachEvent(selector, event, fn) {
    const matches = document.querySelectorAll(selector);
    if (matches && matches.length) {
      matches.forEach((elem) => {
        elem.addEventListener(event, () => fn(elem), false);
      });
    }
  }

  window.onload = function () {
    attachEvent("[data-aw-toggle-menu]", "click", function (elem) {
      elem.classList.toggle("expanded");
      document.body.classList.toggle("overflow-hidden");
      document.getElementById("header")?.classList.toggle("h-screen");
      document.querySelector("#header nav")?.classList.toggle("hidden");
    });

    attachEvent("[data-aw-toggle-color-scheme]", "click", function () {
      document.documentElement.classList.toggle("light");
      // as we already toggled the classlist, the current theme is already the new theme
      const newTheme = document.documentElement.classList.contains("light")
        ? "light"
        : "dark";
      localStorage.theme = newTheme

      adjustTweetsToTheme()
    });

    attachEvent("[data-aw-social-share]", "click", function (elem) {
      const network = elem.getAttribute("data-aw-social-share");
      const url = encodeURIComponent(elem.getAttribute("data-aw-url"));
      const text = encodeURIComponent(elem.getAttribute("data-aw-text"));

      let href;
      switch (network) {
        case "facebook":
          href = `https://www.facebook.com/sharer.php?u=${url}`;
          break;
        case "twitter":
          href = `https://twitter.com/intent/tweet?url=${url}&text=${text}`;
          break;
        case "linkedin":
          href = `https://www.linkedin.com/shareArticle?mini=true&url=${url}&title=${text}`;
          break;
        case "whatsapp":
          href = `https://wa.me/?text=${text}%20${url}`;
          break;
        case "mail":
          href = `mailto:?subject=%22${text}%22&body=${text}%20${url}`;
          break;

        default:
          return;
      }

      const newlink = document.createElement("a");
      newlink.target = "_blank";
      newlink.href = href;
      newlink.click();
    });
  };
  window.onpageshow = function () {
    const elem = document.querySelector("[data-aw-toggle-menu]");
    if (elem) {
      elem.classList.remove("expanded");
    }
    document.body.classList.remove("overflow-hidden");
    document.getElementById("header")?.classList.remove("h-screen");
    document.querySelector("#header nav")?.classList.add("hidden");

    adjustTweetsToTheme()
  };
</script>
